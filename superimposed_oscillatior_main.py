"""
Editor: Richard Polzer
Date: 19.01.2024

This code shall help students to play with oscillations.
User entries:
    frequencies [list]: provide a list of desired frequencies in hz
    amplidues [list]:: provide a list of corresponding amplitures
    means [list]:: provide a list of corresponding mean values
    phases [list]:: provide a list of corresponding phase values
"""

import numpy as np
%matplotlib qt

from superimposed_oscillatior_plot import plot_superimposed_oscillations

# user entries
frequencies = [1, 5, 20]  # frquencies in Hertz: f1, f2, f3, ...
amplitudes = [1, 0.5, 0.2]  # corresponding amplitudes: A1, A2, A3, ...
means = [0.5, 0, 0]  # corresponding mean values: x_mean1, x_mean2, x_mean3, ...
phases = [0, np.pi/2, np.pi]  # corresponding phasen; phi1, phi2, phi3,...
damping_coefficients = [0, 0 ,0] 
# 1
# frequencies = [1, 20]  # frquencies in Hertz: f1, f2, f3, ...
# amplitudes = [1,  0.2]  # corresponding amplitudes: A1, A2, A3, ...
# means = [0.5, 0]  # corresponding mean values: x_mean1, x_mean2, x_mean3, ...
# phases = [0, np.pi]  # corresponding phasen; phi1, phi2, phi3,...
# damping_coefficients = [0, 0 ,0] 
# 2 schwebung
# frequencies = [19.5, 20]  # frquencies in Hertz: f1, f2, f3, ...
# amplitudes = [1,  1]  # corresponding amplitudes: A1, A2, A3, ...
# means = [0, 0]  # corresponding mean values: x_mean1, x_mean2, x_mean3, ...
# phases = [0, 0]  # corresponding phasen; phi1, phi2, phi3,...
# damping_coefficients = [0., 0.] 
# 3 addition
# frequencies = [5, 5]  # frquencies in Hertz: f1, f2, f3, ...
# amplitudes = [1,  1]  # corresponding amplitudes: A1, A2, A3, ...
# means = [0, 0]  # corresponding mean values: x_mean1, x_mean2, x_mean3, ...
# phases = [0, 0]  # corresponding phasen; phi1, phi2, phi3,...
# damping_coefficients = [0., 0.] 
# 4 - auslöschung
# frequencies = [1, 1]  # frquencies in Hertz: f1, f2, f3, ...
# amplitudes = [1,  1]  # corresponding amplitudes: A1, A2, A3, ...
# means = [0, 0]  # corresponding mean values: x_mean1, x_mean2, x_mean3, ...
# phases = [0, np.pi]  # corresponding phasen; phi1, phi2, phi3,...
# damping_coefficients = [0., 0.] 
# 5 - 1 signal gedämpft
# frequencies = [1, 0]  # frquencies in Hertz: f1, f2, f3, ...
# amplitudes = [1,  1]  # corresponding amplitudes: A1, A2, A3, ...
# means = [0, 0]  # corresponding mean values: x_mean1, x_mean2, x_mean3, ...
# phases = [0, np.pi]  # corresponding phasen; phi1, phi2, phi3,...
# damping_coefficients = [0.7, 0.] 
# 6 - A1cos + A2 sin
frequencies = [1, 1]  # frquencies in Hertz: f1, f2, f3, ...
amplitudes = [2,  1]  # corresponding amplitudes: A1, A2, A3, ...
means = [0, 0]  # corresponding mean values: x_mean1, x_mean2, x_mean3, ...
phases = [0, np.pi/2]  # corresponding phasen; phi1, phi2, phi3,...
damping_coefficients = [0., 0.] 

# Plot individual oscillations
"""
This code will plot for each of your provided parameters the corresponding oscillation
x1(t) = A1 * sin(2 * pi * f1 *t) + x_mean1
x2(t) = A2 * sin(2 * pi * f2 *t) + x_mean2
x3(t) = A3 * sin(2 * pi * f3 *t) + x_mean3

and superimposed osciallation
x(t) = x1(t) + x2(t) + x3(t) + ...
"""
# plot_superimposed_oscillations(frequencies, amplitudes, means, phases=phases)
plot_superimposed_oscillations(frequencies, amplitudes, means, phases=phases, damping_coefficients=damping_coefficients)
